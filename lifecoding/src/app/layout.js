// "use client"; //클라이언트 컴퍼넌트 만들기
import Link from "next/link";
import "./globals.css";
import { Control } from "./Control";
//import { useEffect, useState } from "react";

export const metadata = {
  //서버컴퍼넌트에서만 사용가능
  title: "web tutorial",
  description: "Generated by create next app",
};
export default async function RootLayout({ children }) {
  // 아래와 같이 클라이언트 컴퍼넌트를 사용하는 방법은 좋지않음
  // const [topics, setTopics] = useState([]);
  //useState는 오직 클리이언트 컴퍼넌트에서 사용가능
  // useEffect(() => {
  //   fetch("http://localhost:9999/topics")
  //     .then((resp) => resp.json())
  //     .then((result) => {
  //       setTopics(result);
  //     });
  // }, []);

  //서버쪽에서 동적으로 생성한 정적내용을 클라이언트로 전달.
  // const resp= await fetch("http://localhost:9999/topics",{next:{revalidate:0}});//캐시를 쓰지않겠다는것
  const resp = await fetch(process.env.API_URL+"topics", {
    cache: "no-store",
  }); //캐시를 쓰지않겠다는것
  // 가져온정보는 .next폴더에 보관

  const topics = await resp.json();

  return (
    <html>
      <body>
        <h1>
          <Link href="/">게시판</Link>
        </h1>
        <h4>메뉴</h4>
        <Control></Control>
        <h4>글 목록</h4>
        <ol>
          {topics.map((topic) => {
            return (
              <li key={topic.id}>
                <Link href={`/read/${topic.id}`}>{topic.title}</Link>
              </li>
            );
          })}
        </ol>
        {/* <ol>
          <li>
            <Link href="/read/1">html</Link>
          </li>
          <li>
            <Link href="/read/2">css</Link>
          </li>
          <li>
            <Link href="/read/3">js</Link>
          </li>
        </ol> */}
        {children}
   
      </body>
    </html>
  );
}
